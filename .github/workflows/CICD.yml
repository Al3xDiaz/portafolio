name: Demo Push

on:   
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
env:
  MONGO_U: "${{ secrets.MONGO_U }}"
  MONGO_P: "${{ secrets.MONGO_P }}"
  CON_STR: "${{ secrets.CON_STR }}"

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build images
        #run: docker build . --file Dockerfile --tag FRONTEND --label "runnumber=${GITHUB_RUN_ID}"
        run: |
             # Strip git ref prefix from version
             VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
             
             # Strip "v" prefix from tag name
             [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
             
             # Use Docker `latest` tag convention
             [ "$VERSION" == "main" ] && VERSION=latest

             echo VERSION=$VERSION

             echo  "$(cat docker-compose.yml | sed 's/latest/'$VERSION'/g')" > docker-compose.yml
             echo  "$(cat docker-compose.yml | sed 's/.test/.prod/g')" > docker-compose.yml
             docker-compose build
             echo VERSION=$VERSION > .env

      - name: Log in to registry
        # This is where you will update the PAT to CICD_token
        run: echo "${{ secrets.CICD_token }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          source .env
          name_frontend=docker.pkg.github.com/al3xdiaz/portafolio/frontend:$VERSION
          name_backend=docker.pkg.github.com/al3xdiaz/portafolio/backend:$VERSION
          docker push $name_frontend
          docker push $name_backend