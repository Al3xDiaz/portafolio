name: Demo Push

on:   
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build images
        #run: docker build . --file Dockerfile --tag FRONTEND --label "runnumber=${GITHUB_RUN_ID}"
        run: docker build ./frontend/ --file Dockerfile --tag frontend --label "runnumber=${GITHUB_RUN_ID}"
             docker build ./backend/ --file Dockerfile --tag backend --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to CICD_token
        run: echo "${{ secrets.CICD_token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_FRONTEND=ghcr.io/${{ github.repository_owner }}/FRONTEND
          IMAGE_BACKEND=ghcr.io/${{ github.repository_owner }}/BACKEND
          
          # Change all uppercase to lowercase
          IMAGE_FRONTEND=$(echo $IMAGE_FRONTEND | tr '[A-Z]' '[a-z]')
          IMAGE_BACKEND=$(echo $IMAGE_BACKEND | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_FRONTEND=$IMAGE_FRONTEND
          echo IMAGE_BACKEND=$IMAGE_BACKEND
          echo VERSION=$VERSION
          docker tag frontend $IMAGE_FRONTEND:$VERSION
          docker tag backend $IMAGE_BACKEND:$VERSION
          docker push $IMAGE_FRONTEND:$VERSION
          docker push $IMAGE_BACKEND:$VERSION